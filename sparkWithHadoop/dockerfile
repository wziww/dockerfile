FROM openjdk:8-alpine

RUN apk --update add wget tar bash coreutils procps vim openssh openrc curl python
# sshd part
RUN ssh-keygen -q -N "" -t dsa -f /etc/ssh/ssh_host_dsa_key
RUN ssh-keygen -q -N "" -t rsa -f /etc/ssh/ssh_host_rsa_key
RUN ssh-keygen -q -N "" -t ecdsa -f /etc/ssh/ssh_host_ecdsa_key
RUN ssh-keygen -q -N "" -t ed25519 -f /etc/ssh/ssh_host_ed25519_key
RUN ssh-keygen -q -N "" -t rsa -f /root/.ssh/id_rsa
RUN cp /root/.ssh/id_rsa.pub /root/.ssh/authorized_keys

#hadoop && spark
RUN mkdir -p /usr/local/hadoop-spark
# spark part
WORKDIR /usr/local/hadoop-spark
RUN wget https://archive.apache.org/dist/spark/spark-2.4.4/spark-2.4.4-bin-hadoop2.7.tgz && tar -zxvf spark-2.4.4-bin-hadoop2.7.tgz && rm spark-2.4.4-bin-hadoop2.7.tgz
RUN mv spark-2.4.4-bin-hadoop2.7 spark
# hadoop part
RUN wget http://mirror-hk.koddos.net/apache/hadoop/common/hadoop-2.7.7/hadoop-2.7.7.tar.gz && tar -zxvf hadoop-2.7.7.tar.gz && rm hadoop-2.7.7.tar.gz
RUN mv hadoop-2.7.7 hadoop

RUN passwd -u root
# ssh 远程连接后系统 JAVA_HOME 环境变量会失效，这边直接定义一下
# ENV JAVA_HOME /usr/lib/jvm/java-1.8-openjdk
ENV HADOOP_PREFIX /usr/local/hadoop-spark/hadoop
ENV HADOOP_CONF_DIR $HADOOP_PREFIX/etc/hadoop
ENV HADOOP_COMMON_HOME $HADOOP_PREFIX
ENV HADOOP_HDFS_HOME $HADOOP_PREFIX
ENV HADOOP_MAPRED_HOME $HADOOP_PREFIX
ENV HADOOP_YARN_HOME $HADOOP_PREFIX
ENV YARN_CONF_DIR $HADOOP_PREFIX/etc/hadoop
RUN mkdir -p /disk/hdfs/data
RUN mkdir -p /disk/hdfs/temp

RUN chmod 764 $HADOOP_PREFIX/etc/hadoop/hadoop-env.sh
RUN sed -i '/^export JAVA_HOME/ s:.*:export JAVA_HOME=/usr/lib/jvm/java-1.8-openjdk\nexport HADOOP_PREFIX=/usr/local/hadoop-spark/hadoop\nexport HADOOP_HOME=/usr/local/hadoop-spark/hadoop\n:' $HADOOP_PREFIX/etc/hadoop/hadoop-env.sh
RUN sed -i '/^export HADOOP_CONF_DIR/ s:.*:export HADOOP_CONF_DIR=/usr/local/hadoop-spark/hadoop/etc/hadoop/:' $HADOOP_PREFIX/etc/hadoop/hadoop-env.sh
ADD core-site.xml $HADOOP_PREFIX/etc/hadoop/core-site.xml.template
ADD core-site.xml $HADOOP_PREFIX/etc/hadoop/core-site.xml
ADD hdfs-site.xml $HADOOP_PREFIX/etc/hadoop/hdfs-site.xml
ADD mapred-site.xml $HADOOP_PREFIX/etc/hadoop/mapred-site.xml
ADD yarn-site.xml $HADOOP_PREFIX/etc/hadoop/yarn-site.xml

RUN mkdir -p /tmp/native
RUN curl -L https://github.com/sequenceiq/docker-hadoop-build/releases/download/v2.7.1/hadoop-native-64-2.7.1.tgz | tar -xz -C /tmp/native
# fixing the libhadoop.so like a boss
RUN rm -rf $HADOOP_PREFIX/lib/native
RUN mv /tmp/native $HADOOP_PREFIX/lib

# RUN $HADOOP_PREFIX/bin/hdfs namenode -format
ADD config /root/.ssh/config
ADD start.sh /etc/start.sh
RUN chmod 700 /etc/start.sh
# download native support

RUN $HADOOP_PREFIX/bin/hdfs namenode -format

# Hdfs ports
EXPOSE 50010 50020 50070 50075 50090
# Mapred ports
EXPOSE 19888
#Yarn ports
EXPOSE 8030 8031 8032 8033 8040 8042 8088
#Other ports
EXPOSE 49707 2122 

EXPOSE 4040 7077 8080 9000 

# RUN service sshd start && $HADOOP_PREFIX/etc/hadoop/hadoop-env.sh && $HADOOP_PREFIX/sbin/start-dfs.sh && $HADOOP_PREFIX/bin/hdfs dfs -put $HADOOP_PREFIX/etc/hadoop/ input

ENTRYPOINT ["/etc/start.sh"]


# /usr/local/hadoop-spark/hadoop/bin/hdfs --config $HADOOP_CONF_DIR datanode