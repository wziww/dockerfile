FROM openjdk:8-alpine

# ENV JAVA_HOME /usr/lib/jvm/java-1.8-openjdk
ENV HADOOP_PREFIX=/usr/local/hadoop-spark/hadoop \
    HADOOP_CONF_DIR=/usr/local/hadoop-spark/hadoop/etc/hadoop \
    HADOOP_COMMON_HOME=/usr/local/hadoop-spark/hadoop \
    HADOOP_HDFS_HOME=/usr/local/hadoop-spark/hadoop \
    HADOOP_MAPRED_HOME=/usr/local/hadoop-spark/hadoop \
    HADOOP_YARN_HOME=/usr/local/hadoop-spark/hadoop \
    YARN_CONF_DIR=/usr/local/hadoop-spark/hadoop/etc/hadoop

# sshd part
RUN mkdir -p /tmp/native && \
    mkdir -p /usr/local/hadoop-spark && \
    mkdir -p /disk/hdfs/data && \
    mkdir -p /disk/hdfs/temp && \
    apk --update add wget tar bash coreutils procps vim openssh openrc curl python && \
    ssh-keygen -q -N "" -t dsa -f /etc/ssh/ssh_host_dsa_key && \
    ssh-keygen -q -N "" -t rsa -f /etc/ssh/ssh_host_rsa_key && \
    ssh-keygen -q -N "" -t ecdsa -f /etc/ssh/ssh_host_ecdsa_key && \
    ssh-keygen -q -N "" -t ed25519 -f /etc/ssh/ssh_host_ed25519_key && \
    ssh-keygen -q -N "" -t rsa -f /root/.ssh/id_rsa && \
    cp /root/.ssh/id_rsa.pub /root/.ssh/authorized_keys && \
    passwd -u root
#hadoop && spark

ADD config /root/.ssh/config
ADD start.sh /etc/start.sh
# spark part
WORKDIR /usr/local/hadoop-spark

RUN wget https://archive.apache.org/dist/spark/spark-2.4.4/spark-2.4.4-bin-hadoop2.7.tgz && \
    tar -zxvf spark-2.4.4-bin-hadoop2.7.tgz && rm spark-2.4.4-bin-hadoop2.7.tgz && \
    mv spark-2.4.4-bin-hadoop2.7 spark && \
# hadoop part
    wget http://mirror-hk.koddos.net/apache/hadoop/common/hadoop-2.7.7/hadoop-2.7.7.tar.gz && \
    tar -zxvf hadoop-2.7.7.tar.gz && rm hadoop-2.7.7.tar.gz && \
    mv hadoop-2.7.7 hadoop && \
    chmod 764 $HADOOP_PREFIX/etc/hadoop/hadoop-env.sh && \
    sed -i '/^export JAVA_HOME/ s:.*:export JAVA_HOME=/usr/lib/jvm/java-1.8-openjdk\nexport HADOOP_PREFIX=/usr/local/hadoop-spark/hadoop\nexport HADOOP_HOME=/usr/local/hadoop-spark/hadoop\n:' $HADOOP_PREFIX/etc/hadoop/hadoop-env.sh && \
    sed -i '/^export HADOOP_CONF_DIR/ s:.*:export HADOOP_CONF_DIR=/usr/local/hadoop-spark/hadoop/etc/hadoop/:' $HADOOP_PREFIX/etc/hadoop/hadoop-env.sh && \
    curl -L https://github.com/sequenceiq/docker-hadoop-build/releases/download/v2.7.1/hadoop-native-64-2.7.1.tgz | tar -xz -C /tmp/native && \
    rm -rf $HADOOP_PREFIX/lib/native && \
    mv /tmp/native $HADOOP_PREFIX/lib && \
    chmod 700 /etc/start.sh 

# ssh 远程连接后系统 JAVA_HOME 环境变量会失效，这边直接定义一下
ADD core-site.xml $HADOOP_PREFIX/etc/hadoop/core-site.xml.template
ADD core-site.xml $HADOOP_PREFIX/etc/hadoop/core-site.xml
ADD hdfs-site.xml $HADOOP_PREFIX/etc/hadoop/hdfs-site.xml
ADD mapred-site.xml $HADOOP_PREFIX/etc/hadoop/mapred-site.xml
ADD yarn-site.xml $HADOOP_PREFIX/etc/hadoop/yarn-site.xml
# RUN $HADOOP_PREFIX/bin/hdfs namenode -format
RUN $HADOOP_PREFIX/bin/hdfs namenode -format
# fixing the libhadoop.so like a boss
# download native support
  

# Hdfs ports
EXPOSE 50010 50020 50070 50075 50090 \
# Mapred ports
       19888 \
#Yarn ports
       8030 8031 8032 8033 8040 8042 8088 \
#Other ports
       49707 2122 4040 7077 8080 9000 
       
ENTRYPOINT ["/etc/start.sh"]